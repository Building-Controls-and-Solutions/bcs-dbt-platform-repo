name: dbt CI

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'bcs_platform/**'
      - 'profiles.yml'
      - '.github/workflows/dbt_ci.yml'

env:
  DBT_PROFILES_DIR: ./
  SNOWFLAKE_ACCOUNT: ftb40125.us-east-1

jobs:
  dbt-ci:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-core dbt-snowflake
    
    - name: Set PR environment variables
      run: |
        echo "DBT_TARGET=ci" >> $GITHUB_ENV
        echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
        echo "DBT_SCHEMA=PR_${{ github.event.pull_request.number }}" >> $GITHUB_ENV
    
    - name: Test dbt connection
      env:
        SNOWFLAKE_CI_USER: ${{ secrets.SNOWFLAKE_CI_USER }}
        SNOWFLAKE_CI_PASSWORD: ${{ secrets.SNOWFLAKE_CI_PASSWORD }}
      run: |
        cd bcs_platform
        dbt debug --target ci
    
    - name: Install dbt dependencies
      env:
        SNOWFLAKE_CI_USER: ${{ secrets.SNOWFLAKE_CI_USER }}
        SNOWFLAKE_CI_PASSWORD: ${{ secrets.SNOWFLAKE_CI_PASSWORD }}
      run: |
        cd bcs_platform
        dbt deps --target ci
    
    - name: Run dbt models
      env:
        SNOWFLAKE_CI_USER: ${{ secrets.SNOWFLAKE_CI_USER }}
        SNOWFLAKE_CI_PASSWORD: ${{ secrets.SNOWFLAKE_CI_PASSWORD }}
      run: |
        cd bcs_platform
        dbt run --target ci
    
    - name: Test dbt models
      env:
        SNOWFLAKE_CI_USER: ${{ secrets.SNOWFLAKE_CI_USER }}
        SNOWFLAKE_CI_PASSWORD: ${{ secrets.SNOWFLAKE_CI_PASSWORD }}
      run: |
        cd bcs_platform
        dbt test --target ci
    
    - name: Generate dbt docs
      env:
        SNOWFLAKE_CI_USER: ${{ secrets.SNOWFLAKE_CI_USER }}
        SNOWFLAKE_CI_PASSWORD: ${{ secrets.SNOWFLAKE_CI_PASSWORD }}
      run: |
        cd bcs_platform
        dbt docs generate --target ci
    
    - name: Upload dbt artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dbt-artifacts
        path: bcs_platform/target/
    
    - name: Comment PR with results
      uses: actions/github-script@v6
      if: always()
      with:
        script: |
          const fs = require('fs');
          let comment = '## dbt CI Results\n\n';
          
          comment += `âœ… dbt models ran successfully in schema \`DB_DEV.PR_${{ github.event.pull_request.number }}\`\n\n`;
          comment += '### Next Steps:\n';
          comment += '1. Review the changes in Snowflake\n';
          comment += '2. Verify test results\n';
          comment += '3. Check documentation artifacts\n';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Cleanup PR schema on failure
      if: failure()
      env:
        SNOWFLAKE_CI_USER: ${{ secrets.SNOWFLAKE_CI_USER }}
        SNOWFLAKE_CI_PASSWORD: ${{ secrets.SNOWFLAKE_CI_PASSWORD }}
      run: |
        # Optional: Add cleanup logic here
        echo "PR ${{ github.event.pull_request.number }} failed - schema DB_DEV.PR_${{ github.event.pull_request.number }} may need manual cleanup"